"""posts

Revision ID: b949e5da0ac2
Revises: a62a2a47baa0
Create Date: 2024-09-21 20:23:46.373422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b949e5da0ac2'
down_revision: Union[str, None] = 'a62a2a47baa0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mp_post_pool',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Primary key for the post pool'),
    sa.Column('name', sa.String(length=256), nullable=False, comment='Name of the post pool'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mp_post_template',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Template ID'),
    sa.Column('name', sa.String(length=256), nullable=False, comment='Name of the template'),
    sa.Column('template_content', sa.Text(), nullable=False, comment='Content of the template'),
    sa.Column('required_params', postgresql.ARRAY(sa.String(length=32)), nullable=False, comment='Required params to render template'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mp_post_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Post Type ID'),
    sa.Column('name', sa.String(length=128), nullable=False, comment='Post type name'),
    sa.Column('post_template_id', sa.Integer(), nullable=True, comment='Foreign key to PostTemplate (use default for None)'),
    sa.ForeignKeyConstraint(['post_template_id'], ['mp_post_template.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('mp_post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Post ID'),
    sa.Column('title', sa.String(length=256), nullable=False, comment='Title of the post'),
    sa.Column('content', sa.Text(), nullable=True, comment='Content generated from template'),
    sa.Column('template_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Parameters used for rendering template'),
    sa.Column('post_type_id', sa.Integer(), nullable=True, comment='Foreign key to PostType (use default for None).'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Timestamp of record creation'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Timestamp of last record update'),
    sa.ForeignKeyConstraint(['post_type_id'], ['mp_post_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mp_post_media',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Post Media ID'),
    sa.Column('type', sa.Enum('image', 'video', name='post_media_type'), nullable=False, comment='Type of the media'),
    sa.Column('caption', sa.String(length=256), nullable=True, comment='Caption of the media'),
    sa.Column('url', sa.String(length=2083), nullable=False, comment='URL of the media'),
    sa.Column('post_id', sa.Integer(), nullable=False, comment='Foreign key to Post'),
    sa.ForeignKeyConstraint(['post_id'], ['mp_post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mp_post_pool_post',
    sa.Column('post_id', sa.Integer(), nullable=False, comment='Foreign key to Post'),
    sa.Column('pool_id', sa.Integer(), nullable=False, comment='Foreign key to PostPool'),
    sa.Column('order', sa.Integer(), nullable=True, comment='Value for ordering posts in the pool'),
    sa.Column('added_at', sa.DateTime(), nullable=False, comment='Datetime of addition to the pool'),
    sa.Column('posted_at', sa.DateTime(), nullable=True, comment='Datetime of posting'),
    sa.ForeignKeyConstraint(['pool_id'], ['mp_post_pool.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['mp_post.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'pool_id')
    )

    insert_default_template_sql = '''
        INSERT INTO mp_post_template (name, template_content, required_params)
        VALUES ('default', '{{content}}', ARRAY['content']);
    '''

    insert_default_type_sql = '''
        INSERT INTO mp_post_type (name, post_template_id)
        SELECT 'default', id
        FROM mp_post_template
        WHERE name = 'default'
        LIMIT 1;

    '''

    op.execute(insert_default_template_sql)
    op.execute(insert_default_type_sql)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mp_post_pool_post')
    op.drop_table('mp_post_media')
    op.drop_table('mp_post')
    op.drop_table('mp_post_type')
    op.drop_table('mp_post_template')
    op.drop_table('mp_post_pool')
    op.execute('DROP TYPE IF EXISTS post_media_type;')
    # ### end Alembic commands ###
